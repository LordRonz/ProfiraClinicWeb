@page "/clinic"
@using System.Net.Http.Json
@using ProfiraClinic.Models
@using ProfiraClinicWeb.Models
@using ProfiraClinicWeb.Data
@using ProfiraClinicWeb.Services
@using ProfiraClinicWeb.Utils;
@using Microsoft.EntityFrameworkCore;
@inject HttpClient httpClient
@inject ClinicApiService ApiService

@using PatientModel = ProfiraClinicWeb.Models.Patient

<MudCard Class="p-4 h-100 rounded-3 overflow-scroll">
    <ProfiraClinicWeb.Components.Table.Table Config="ClinicTableConfig" />
</MudCard>

@inject AppDbContext dbContext
@inject NavigationManager NavManager
@code {
    private bool _hidePosition;
    private bool _loading;
    private IEnumerable<Element> Elements = new List<Element>();
    private string infoFormat = "Showing {first_item} to {last_item} of {all_items}";

    private List<MKlinik> clinics = new List<MKlinik>();

    [CascadingParameter]
    public ProfiraClinicWeb.Components.Layout.MainLayout Layout { get; set; }

    public TableConfig ClinicTableConfig { get; set; } = new TableConfig(new List<TableColumn>(), new List<object>());

    protected override void OnInitialized()
    {
        Layout.ChangeTitleAndRoute("Klinik", "Master/Klinik");
    }

    protected override async Task OnInitializedAsync()
    {
        var apiResponse = await ApiService.GetClinicsAsync();
        // Check if status code indicates success
        System.Diagnostics.Debug.WriteLine("Done");
        if (apiResponse.StatusCode == 0 && apiResponse.Data != null)
        {
            clinics = apiResponse.Data.Items;
        }
        else
        {
            // Handle API error case appropriately (e.g., display an error message)
            // For example: show a notification, log the error etc.
        }

        var dataSource = clinics.Select(el =>
        {
            return (object)new { edit = "/klinik/" + el.KDLOK, kode = el.KDLOK, namaKlinik = el.KETLK, alamat = el.ALAMAT, kota = el.KOTA, telepon = el.TELP, namaPt = el.NAMAPT };
        }
        ).ToList();

        ClinicTableConfig = new TableConfig(new List<TableColumn> {
                new TableColumn { Caption="Edit", DataField="edit", Type=ColumnType.Edit },
                new TableColumn { Caption="Kode", DataField="kode" },
                new TableColumn { Caption="Nama Klinik", DataField="namaKlinik" },
                new TableColumn { Caption="Alamat", DataField="alamat" },
                new TableColumn { Caption="Kota", DataField="kota" },
                new TableColumn { Caption="Telepon", DataField="telepon" },
                new TableColumn { Caption="Nama PT", DataField="namaPt" },
        }, dataSource, "/clinic/add");
    }

}
