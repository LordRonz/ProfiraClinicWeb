@page "/login-user"
@using System.Net.Http.Json
@using ProfiraClinic.Models.Core
@using ProfiraClinicWeb.Utils
@using ProfiraClinicWeb.Services
@inject UserApiService ApiService

<MudCard Class="p-4 h-100 rounded-3 overflow-scroll">
    <ProfiraClinicWeb.Components.Table.Table Config="UserTableConfig" />
</MudCard>

@code {
    private string infoFormat = "Showing {first_item} to {last_item} of {all_items}";

    [CascadingParameter]
    public ProfiraClinicWeb.Components.Layout.MainLayout Layout { get; set; }

    // Configuration for the table. It will be set once the data is loaded.
    public TableConfig UserTableConfig { get; set; } = new TableConfig(new List<TableColumn>(), new List<object>());

    // Holds the list of patients
    private List<ProfiraClinic.Models.Core.User> Users = new List<ProfiraClinic.Models.Core.User>();

    // This method sets up the page title.
    protected override void OnInitialized()
    {
        Layout.ChangeTitleAndRoute("System", "Setup Login User");
    }

    // When the component is initialized, call the API service to retrieve patients.
    protected override async Task OnInitializedAsync()
    {
        try
        {
            System.Diagnostics.Debug.WriteLine("Loading patients...");
            // Get the API response
            var apiResponse = await ApiService.GetUsersAsync();
            // Check if status code indicates success
            System.Diagnostics.Debug.WriteLine("Done");
            if (apiResponse.StatusCode == 0 && apiResponse.Data != null)
            {
                Users = apiResponse.Data.Items;
            }
            else
            {
                // Handle API error case appropriately (e.g., display an error message)
                // For example: show a notification, log the error etc.
            }

            System.Diagnostics.Debug.WriteLine("Parsing to table data");

            var dataSource = Users.Select(el =>
                (object)new
                {
                    view = $"login-user/{el.KodeUser}",
                    edit = $"login-user/edit/{el.KodeUser}",
                    memberId = el.KodeUser,
                    namaPasien = el.USRID,
                    groupLogin = el.KodeUserGroup,
                }
            ).ToList();

            UserTableConfig = new TableConfig(
                new List<TableColumn> {
                    new TableColumn { Caption = "View", DataField = "view", Type = ColumnType.View },
                    new TableColumn { Caption = "Edit", DataField = "edit", Type = ColumnType.Edit },
                    new TableColumn { Caption = "User ID", DataField = "memberId" },
                    new TableColumn { Caption = "Nama User", DataField = "namaPasien" },
                    new TableColumn { Caption = "Group Login", DataField = "groupLogin" },

                    new TableColumn { Caption = "Delete", DataField = "delete", Type = ColumnType.Delete },
                                },
                dataSource,
                "/login-user/add"
            );
        }
        catch (Exception ex)
        {
            // Handle exceptions (e.g., network errors, deserialization issues, etc.)
            System.Diagnostics.Debug.WriteLine($"Error loading patients: {ex.Message}");
        }
    }
}
