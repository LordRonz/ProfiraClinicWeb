@page "/pasien/{Kdcus}"
@using System.Net.Http.Json
@using ProfiraClinic.Models.Core
@using ProfiraClinicWeb.Models
@using ProfiraClinicWeb.Services
@using ProfiraClinicWeb.Utils;
@using ProfiraClinicWeb.Data;
@using Microsoft.EntityFrameworkCore;
@inject HttpClient httpClient
@inject CustomerApiService ApiService
@inject RiwayatTransaksiApiService RiwayatTransaksiService
@using Color = MudBlazor.Color

@if (customer != null)
{
<MudCard>
    <MudGrid Style="padding: 20px;">
        <MudItem xs="4">
            <MudCard Class="d-flex flex-column align-items-center h-100 w-100 justify-content-center">
                    <MudImage src="https://cdn-icons-png.flaticon.com/512/149/149071.png"
                              Class="rounded-circle" Width="160" Height="160" />
                <MudText>@customer.NamaCustomer</MudText>
                <MudText>@customer.KodeCustomer</MudText>
            </MudCard>
        </MudItem>
        <MudItem xs="8">
            <MudCard Style="padding: 20px">
                <MudGrid>
                    <MudItem xs="6">
                        <MudText>Member Klinik</MudText>
                        <MudText>Jenis Kelamin</MudText>
                        <MudText>Alamat</MudText>
                        <MudText>No. Telepon/HP</MudText>
                        <MudText>Tanggal Lahir</MudText>
                        <MudText>Tanggal Registrasi</MudText>
                        <MudText>Transaksi Terakhir</MudText>
                        <MudText>Active</MudText>
                    </MudItem>
                    <MudItem xs="6">
                        <MudText>@customer.KodeLokasi</MudText>
                        <MudText>@getGender()</MudText>
                        <MudText>
                            @customer.AlamatDomisili
                        </MudText>
                        <MudText>@customer.NomorHP</MudText>
                            <MudText>@customer.TanggalLahir?.ToString("dd-MM-yyyy")</MudText>
                            <MudText>@customer.TanggalRegistrasi?.ToString("dd-MM-yyyy")</MudText>
                        <MudText>
                            @customer.UPDDT
                        </MudText>
                        <MudCheckBox Value="@isActive()" Dense="true" Disabled="true"></MudCheckBox>
                    </MudItem>
                </MudGrid>
            </MudCard>
        </MudItem>
    </MudGrid>

    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <MudTabPanel Text="Produk">
            <ProfiraClinicWeb.Components.Table.Table Config="ProdukTableConfig" WithAdd="false" />
        </MudTabPanel>
        <MudTabPanel Text="Perawatan">
                <ProfiraClinicWeb.Components.Table.Table Config="PerawatanTableConfig" WithAdd="false" />
        </MudTabPanel>
        <MudTabPanel Text="Paket">
                <ProfiraClinicWeb.Components.Table.Table Config="PaketTableConfig" WithAdd="false" />
        </MudTabPanel>
        <MudTabPanel Text="Sisa Paket">
                <ProfiraClinicWeb.Components.Table.Table Config="SisaPaketTableConfig" WithAdd="false" />
        </MudTabPanel>
        <MudTabPanel Text="Uang Muka">
                <ProfiraClinicWeb.Components.Table.Table Config="UangMukaTableConfig" WithAdd="false" />
        </MudTabPanel>
        <MudTabPanel Text="Piutang">
                <ProfiraClinicWeb.Components.Table.Table Config="PiutangTableConfig" WithAdd="false" />
        </MudTabPanel>
        <MudTabPanel Text="Pemakaian Paket">
                <ProfiraClinicWeb.Components.Table.Table Config="PerawatanTableConfig" WithAdd="false" />
        </MudTabPanel>
        <MudTabPanel Text="Rekam Medis">
                <ProfiraClinicWeb.Components.Table.Table Config="PerawatanTableConfig" WithAdd="false" />
        </MudTabPanel>
        <MudTabPanel Text="Penilaian">
            <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" @bind-SelectedIndex="ChartIndex" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
        </MudTabPanel>
    </MudTabs>
</MudCard>
}
else
{
    <MudContainer Class="d-flex justify-content-center align-items-center vh-100">
        <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
    </MudContainer>
}

@code {
    private bool _loading;
    private string infoFormat = "Showing {first_item} to {last_item} of {all_items}";

    [CascadingParameter]
    public ProfiraClinicWeb.Components.Layout.MainLayout Layout { get; set; }

    [Parameter] public string Kdcus { get; set; }

    Customer? customer;

    // Table configs for each tab
    public TableConfig ProdukTableConfig { get; set; } = new(new(), new());
    public TableConfig PerawatanTableConfig { get; set; } = new(new(), new());
    public TableConfig PaketTableConfig { get; set; } = new(new(), new());
    public TableConfig SisaPaketTableConfig { get; set; } = new(new(), new());
    public TableConfig UangMukaTableConfig { get; set; } = new(new(), new());
    public TableConfig PiutangTableConfig { get; set; } = new(new(), new());

    protected override void OnInitialized()
    {
        Layout.ChangeTitleAndRoute("Pasien", "Detail Pasien");
    }

    protected override async Task OnInitializedAsync()
    {
        var apiResponse = await ApiService.GetPatientByCodeAsync(Kdcus);
        if (apiResponse.StatusCode == 0 && apiResponse.Data != null)
            customer = apiResponse.Data;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender || string.IsNullOrWhiteSpace(Kdcus)) return;

        try
        {
            _loading = true;

            // --- Sisa Paket (Saldo Paket) ---
            var saldoPaketResp = await RiwayatTransaksiService.GetSaldoPaket(Kdcus);
            var saldoPaketItems = saldoPaketResp.StatusCode == 0 && saldoPaketResp.Data != null
                ? saldoPaketResp.Data
                : new List<SaldoPaket>();

            var sisaPaketDataSrc = saldoPaketItems.Select(x => (object)new
            {
                lokasi = x.KETLK,
                noFaktur = x.NOFAK,
                kodeCust = x.KDCUS,
                namaCust = x.NMCUS,
                kodePaket = x.KDPKT,
                namaPaket = x.NMPKT,
                kodePerawat = x.KDPER,
                namaPerawat = x.NMPER,
                frekwensi = x.FREKW?.ToString() ?? "",
                jumlahPr = x.JMLPR?.ToString() ?? "",
                sisa = x.SISA?.ToString() ?? "",
                tglAkhir = x.TGAKH?.ToString("dd/MM/yyyy") ?? ""
            }).ToList();

            SisaPaketTableConfig = new TableConfig(
                new List<TableColumn>
                {
                    new TableColumn { Caption="Lokasi",        DataField="lokasi" },
                    new TableColumn { Caption="No Faktur",     DataField="noFaktur" },
                    new TableColumn { Caption="Kode Cust",     DataField="kodeCust" },
                    new TableColumn { Caption="Nama Cust",     DataField="namaCust" },
                    new TableColumn { Caption="Kode Paket",    DataField="kodePaket" },
                    new TableColumn { Caption="Nama Paket",    DataField="namaPaket" },
                    new TableColumn { Caption="Kode Perawatan",DataField="kodePerawat" },
                    new TableColumn { Caption="Nama Perawatan",DataField="namaPerawat" },
                    new TableColumn { Caption="Frekwensi",     DataField="frekwensi" },
                    new TableColumn { Caption="Jumlah PR",     DataField="jumlahPr" },
                    new TableColumn { Caption="Sisa",          DataField="sisa" },
                    new TableColumn { Caption="Tgl Akhir",     DataField="tglAkhir" },
                },
                sisaPaketDataSrc,
                addRoute: ""
            );

            // --- Piutang ---
            var piutangResp = await RiwayatTransaksiService.GetSaldoPiutang(Kdcus);
            var piutang = piutangResp.StatusCode == 0 && piutangResp.Data != null
                ? piutangResp.Data
                : new List<SaldoPiutang>();

            // Adjust columns to your SaldoPiutang model’s properties if names differ
            var piutangDataSrc = piutang.Select(x => (object)new
            {
                nomor = x.NOFAK ?? "", // guess/fallback
                tanggal = x.TGFAK?.ToString("dd/MM/yyyy") ?? "",
                total = x.NILAI?.ToString("N2") ?? "",
                sisa = x.SISA?.ToString("N2") ?? "",
                lokasi = x.KETLK,
            }).ToList();

            PiutangTableConfig = new TableConfig(
                new List<TableColumn>
                {
                    new TableColumn { Caption="Nomor",   DataField="nomor" },
                    new TableColumn { Caption="Tanggal", DataField="tanggal" },
                    new TableColumn { Caption="Lokasi",      DataField="lokasi" },
                    new TableColumn { Caption="Total",   DataField="total", Align = ColumnAlign.Right },
                    new TableColumn { Caption="Sisa",    DataField="sisa",  Align = ColumnAlign.Right },
                },
                piutangDataSrc,
                addRoute: ""
            );

            // --- Penjualan Paket ---
            var jualPaketResp = await RiwayatTransaksiService.GetPenjualanPaket(Kdcus);
            var jualPaket = jualPaketResp.StatusCode == 0 && jualPaketResp.Data != null
                ? jualPaketResp.Data
                : new List<PenjualanPaket>();

            var paketDataSrc = jualPaket.Select(x => (object)new
            {
                noFaktur = x.NOFAK ?? "",
                tanggal = x.TGFAK?.ToString("dd/MM/yyyy") ?? "",
                kodePaket = x.KDPKT ?? "",
                namaPaket = x.NMPKT ?? "",
                qty = x.JUMLA?.ToString() ?? "0",
                total = x.JUMLA?.ToString("N2") ?? "",
                lokasi = x.KETLK,
            }).ToList();

            PaketTableConfig = new TableConfig(
                new List<TableColumn>
                {
                    new TableColumn { Caption="No Faktur",  DataField="noFaktur" },
                    new TableColumn { Caption="Tanggal",    DataField="tanggal" },
                    new TableColumn { Caption="Lokasi",      DataField="lokasi" },
                    new TableColumn { Caption="Kode Paket", DataField="kodePaket" },
                    new TableColumn { Caption="Nama Paket", DataField="namaPaket" },
                    new TableColumn { Caption="Qty",        DataField="qty",   Align = ColumnAlign.Right },
                    new TableColumn { Caption="Total",      DataField="total", Align = ColumnAlign.Right },
                },
                paketDataSrc,
                addRoute: ""
            );

            // --- Penjualan Perawatan ---
            var jualRawatResp = await RiwayatTransaksiService.GetPenjualanPerawatan(Kdcus);
            var jualRawat = jualRawatResp.StatusCode == 0 && jualRawatResp.Data != null
                ? jualRawatResp.Data
                : new List<PenjualanPerawatan>();

            var perawatanDataSrc = jualRawat.Select(x => (object)new
            {
                noFaktur = x.NOKON ?? "",
                tanggal = x.TGKON?.ToString("dd/MM/yyyy") ?? "",
                kodePerawatan = x.KDPER ?? "",
                namaPerawatan = x.NMPER ?? "",
                qty = x.JUMLA?.ToString() ?? "0",
                total = x.JUMLA?.ToString("N2") ?? "",
                lokasi = x.KETLK,
            }).ToList();

            PerawatanTableConfig = new TableConfig(
                new List<TableColumn>
                {
                    new TableColumn { Caption="No Faktur",      DataField="noFaktur" },
                    new TableColumn { Caption="Lokasi",      DataField="lokasi" },
                    new TableColumn { Caption="Tanggal",        DataField="tanggal" },
                    new TableColumn { Caption="Kode Perawatan", DataField="kodePerawatan" },
                    new TableColumn { Caption="Nama Perawatan", DataField="namaPerawatan" },
                    new TableColumn { Caption="Qty",            DataField="qty",   Align = ColumnAlign.Right },
                    new TableColumn { Caption="Total",          DataField="total", Align = ColumnAlign.Right },
                },
                perawatanDataSrc,
                addRoute: ""
            );

            // --- Penjualan Produk ---
            var jualProdResp = await RiwayatTransaksiService.GetSaldoPakets(Kdcus); // your method name returns PenjualanProduk
            var jualProd = jualProdResp.StatusCode == 0 && jualProdResp.Data != null
                ? jualProdResp.Data
                : new List<PenjualanProduk>();

            var produkDataSrc = jualProd.Select(x => (object)new
            {
                noFaktur = x.NOFAK ?? "",
                tanggal = x.TGFAK?.ToString("dd/MM/yyyy") ?? "",
                kodeBarang = x.KDBHN ?? "",
                namaBarang = x.KDBHN ?? "",
                qty = x.JMLJL?.ToString() ?? "0",
                total = x.JMLJL?.ToString("N2") ?? "",
                lokasi = x.KETLK,
            }).ToList();

            ProdukTableConfig = new TableConfig(
                new List<TableColumn>
                {
                    new TableColumn { Caption="No Faktur",   DataField="noFaktur" },
                    new TableColumn { Caption="Tanggal",     DataField="tanggal" },
                    new TableColumn { Caption="Lokasi",      DataField="lokasi" },
                    new TableColumn { Caption="Kode Barang", DataField="kodeBarang" },
                    new TableColumn { Caption="Nama Barang", DataField="namaBarang" },
                    new TableColumn { Caption="Qty",         DataField="qty",   Align = ColumnAlign.Right },
                    new TableColumn { Caption="Total",       DataField="total", Align = ColumnAlign.Right },
                },
                produkDataSrc,
                addRoute: ""
            );

            // --- Uang Muka (if/when you have an endpoint, populate similarly) ---
            UangMukaTableConfig = new TableConfig(
                new List<TableColumn>
                {
                    new TableColumn { Caption="(TODO) Tanggal", DataField="tanggal" },
                    new TableColumn { Caption="(TODO) Nomor",   DataField="nomor" },
                    new TableColumn { Caption="(TODO) Nilai",   DataField="nilai", Align = ColumnAlign.Right },
                },
                new List<object>(),
                addRoute: ""
            );
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine($"Error loading riwayat transaksi for {Kdcus}: {ex.Message}");
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }

    string getGender() => customer?.JenisKelamin == "0" ? "Perempuan" : "Laki-laki";
    bool isActive() => customer?.AKTIF == "1";

    private int ChartIndex = -1;
    public List<ChartSeries> Series = new()
    {
        new ChartSeries { Name = "Sales", Data = new double[] { 4500, 5300, 6250, 7800, 9800, 15000 } },
    };
    public string[] XAxisLabels = { "January", "February", "March", "April", "May", "June" };
}

