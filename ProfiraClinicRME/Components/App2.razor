@using ProfiraClinicRME.Components.Pages
@using ProfiraClinicRME.Components.Widget

@inject ISnackbar Snackbar


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="app.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <link href="_content/BootstrapBlazor.FontAwesome/css/font-awesome.min.css" rel="stylesheet">
    <link href="_content/BootstrapBlazor/css/bootstrap.blazor.bundle.min.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="app.css" />

    <HeadOutlet />
</head>

<body>
   <LayoutView Layout="@typeof(ProfiraClinicRME.Components.Layout.MainLayout)">
       <PenandaanGambar />
   </LayoutView>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/BootstrapBlazor/js/bootstrap.blazor.bundle.min.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="app.js"></script>

</body>

</html>
@code{
    private string _classPath = "App2";

    private DrawingWidget? _refDrawing;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LogTrace.Info("hello");
    }

    public async Task DoAction()
    {
        LogTrace.Info("start", path: _classPath);
        // var result = await _refDrawing.CallJsFunction();
        addSnackbar("result.Message", Severity.Info);
    }

    protected void addSnackbar(string message, Severity severity = Severity.Error)
    {
        LogTrace.Info("trace", message, "App2");
        // Snackbar.Clear();
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Configuration.VisibleStateDuration = 3000;
        Snackbar.Add(message, severity);
    }

}

