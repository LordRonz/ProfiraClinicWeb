@page "/anamnesis"
@inherits BasePage

@using System.Net.Http.Json
@using ProfiraClinic.Models.Api
@using ProfiraClinicRME.Utils;
@using ProfiraClinicRME.Components.Section
@using ProfiraClinicRME.Components.Widget

@inject HttpClient httpClient
@inject IAppointmentService SvcAppointment
@inject IAnamnesisService SvcAnamnesis
@inject NavigationManager Nav

<TopbarUser Route="Anamnesis"
    Title="Perawatan Pasien / Anamnesis"
    Appointment="_apo"
    ShowBack="true" 
    ShowSave="true"
    OnSave="@DoSave"
/>

<MudCard Class="p-4 minh-100 rounded-3 pemeriksaan-input">
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6 tabcontainer" style="">
        <MudTabPanel Text="Anamnesis">
            <MudTextField @bind-Value="@_trmAnamnesisInForm.KeteranganAnamnesis" ShrinkLabel T="string" Placeholder="Silakan ketik anamnesis pasien disini" Variant="Variant.Outlined" Lines="15" MaxLines="15" AutoGrow />
        </MudTabPanel>
        <MudTabPanel Text="Riwayat">
            <MudGrid Class="gap-y-2 riwayat" Style="max-width: 70%;">
                <MudItem xs="12" Class="p-1">
                    <MudTextField ShrinkLabel T="string" Label="Riwayat Penyakit Dahulu (termasuk riwayat operasi)" Variant="Variant.Outlined" Lines="10" />
                </MudItem>
                <MudItem xs="4" Class="p-1">
                    <p>Riwayat Penyakit Sekarang</p>
                </MudItem>
                <MudItem xs="8" Class="p-1 gap-2">
                    <div class="d-flex gap-2 flex-wrap">
                        <MudCheckBox T="bool" Label="DM" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Hipertensi" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="TBC" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Asthma" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Hepatitis" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Kelainan Darah" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Lain-lain, sebutkan" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                    </div>
                    <MudTextField ShrinkLabel T="string" Variant="Variant.Outlined" Lines="10" />
                </MudItem>
                <MudItem xs="4" Class="p-1">
                    <p>Riwayat Alergi Obat</p>
                </MudItem>
                <MudItem xs="8" Class="p-1 gap-2">
                    <div class="d-flex gap-2 flex-wrap">
                        <MudCheckBox T="bool" Label="Tidak" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Ya, Sebutkan" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                    </div>
                    <MudTextField ShrinkLabel T="string" Variant="Variant.Outlined" Lines="10" />
                </MudItem>
                <MudItem xs="4" Class="p-1">
                    <p>Riwayat Alergi Makanan</p>
                </MudItem>
                <MudItem xs="8" Class="p-1 gap-2">
                    <div class="d-flex gap-2 flex-wrap">
                        <MudCheckBox T="bool" Label="Tidak" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Ya, Sebutkan" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                    </div>
                    <MudTextField ShrinkLabel T="string" Variant="Variant.Outlined" Lines="10" />
                </MudItem>
                <MudItem xs="4" Class="p-1">
                    <p>Faktor Resiko</p>
                </MudItem>
                <MudItem xs="8" Class="p-1 gap-2">
                    <div class="d-flex gap-2 flex-wrap">
                        <MudCheckBox T="bool" Label="Merokok" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Obesitas" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Displidemia" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                        <MudCheckBox T="bool" Label="Lain-lain, sebutkan" Dense Size="MudBlazor.Size.Small"></MudCheckBox>
                    </div>
                    <MudTextField ShrinkLabel T="string" Variant="Variant.Outlined" Lines="10" />
                </MudItem>
            </MudGrid>
        </MudTabPanel>
    </MudTabs>
    <MudCard Class="mt-8">
        <Note EntityType="@TRMAnamnesis" ListData="@_listRekamMedis">
            <NoteContent>
                <ul>
                    <li>
                        <MudText Typo="Typo.body2" Color="MudBlazor.Color.Default">
                            Kunjungan: @context.NomorAppointment
                        </MudText>
                    </li>
                    <li>
                        <MudText Typo="Typo.body2" Color="MudBlazor.Color.Default">
                            Keterangan Anamnesis: @context.KeteranganAnamnesis
                        </MudText>
                    </li>
                    <li>
                        <MudText Typo="Typo.body2" Color="MudBlazor.Color.Default">
                            Dokter: "todo"
                        </MudText>
                    </li>
                </ul>
                <MudText Typo="Typo.body2" Color="MudBlazor.Color.Default">
                    @context.UPDDT
                </MudText>
            </NoteContent>
        </Note>
    </MudCard>

</MudCard>


@code {
    private bool _hidePosition;
    private bool _loading;
    private List<TRMAnamnesis> _listRekamMedis = [];
    private string _saveMode = "add";
    private TRMAppointment? _apo = null;
    private TRMAnamnesis _trmAnamnesisInForm = new();



    public Anamnesis()
    {
        _classPath = "App::Page::Anamnesis";
        LogTrace.Info("class init", path: _classPath);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var resApo = SvcAppointment.GetCurrent();
        if (resApo.Status != ServiceResultEnum.FOUND)
        {
            addSnackbar("Terjadi kesalahan sistem.", Severity.Error);
            return;
        }
        _apo = resApo.Data;
    }

    protected override async Task OnInitializedAsync()
    {
        //ambil rekam medis cppt
        var resDiagnosa = await SvcAnamnesis.GetListAsync(_apo.KodeCustomer);
        if (resDiagnosa.Status == ServiceResultEnum.FOUND)
        {
            _listRekamMedis = resDiagnosa.Data.Items;
        }
        else
        {
            addSnackbar("Gagal memuat Rekam Medis Anamnesis.", Severity.Error);
        }

        //cek apakah sudah ada pemriksaan umum untuk appointment ini
        var resCheck = await SvcAnamnesis.GetByNomorAppointment(_apo.NomorAppointment);
        if (resCheck.Status == ServiceResultEnum.FOUND)
        {
            _saveMode = "edit";
            _trmAnamnesisInForm = resCheck.Data!;
            addSnackbar("Memuat ulang data Anamnesis.", Severity.Info);

        }
        _trmAnamnesisInForm.NomorAppointment = _apo?.NomorAppointment ?? "";
        _trmAnamnesisInForm.KodeKaryawan = _apo?.KodeKaryawan ?? "";
        _trmAnamnesisInForm.KodeCustomer = _apo?.KodeCustomer ?? "";
        _trmAnamnesisInForm.KodeLokasi = _apo?.KodeLokasi ?? "";
        await InvokeAsync(StateHasChanged);
    }


    private async Task DoSave()
    {
        LogTrace.Info("start", path: _classPath);
        _trmAnamnesisInForm.KodeLokasi = _apo?.KodeLokasi ?? "-";
        _trmAnamnesisInForm.TanggalTransaksi = DateTime.Now;
        //keadaan umum binded
        //tk kesadaran binded
        //sistolik distlik suhu sturasi, frek napas, frek nadi, berat badan, tgg bdn, idx tubh , lngkr kepala

        ServiceResult<NomorTransaksiDto> resSave;
        string msg = "";
        if (_saveMode == "add")
        {
            resSave = await SvcAnamnesis.Add(_trmAnamnesisInForm);
            msg = "Penyimpanan Anamnesis berhasil dilakukan";
        }
        else
        {
            resSave = await SvcAnamnesis.Edit(_trmAnamnesisInForm);
            msg = "Perubahan Anamnesis berhasil dilakukan";
        }
        LogTrace.Info("Result Save", resSave, _classPath);
        if (resSave.Status == ServiceResultEnum.SUCCESS)
        {
            addSnackbar(msg, Severity.Info);
            await Task.Delay(1000);
            Nav.NavigateTo("/perawatan/" + _apo?.IDAppointment);
        }
        else
        {
            addSnackbar("Penyimpanan Anamnesis gagal dilakukan", Severity.Error);

        }

    }

}

<style>
    .pemeriksaan-input .mud-input-root {
        padding: 0px 10px !important;
        font-size: 12px !important;
    }

    .pemeriksaan-input .tabcontainer {
       height: 100% !important;
    }

    .pemeriksaan-input .riwayat .mud-input-root {
        height: 40px !important;
    }

    .riwayat .mud-typography {
        font-size: 12px !important;
    }

    .pemeriksaan-input .mud-input-label {
        font-size: 14px !important;
        line-height: 14px !important;
    }

    .pemeriksaan-input .mud-input-label-outlined {
        transform: translate(12px, 10px) scale(1);
    }

    .pemeriksaan-input .mud-input-label-inputcontrol {
        top: -3px;
    }
</style>
