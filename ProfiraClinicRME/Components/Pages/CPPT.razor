@page "/cppt"
@inherits BasePage

@using System.Net.Http.Json
@using ProfiraClinicRME.Utils;
@using ProfiraClinicRME.Components.Section
@using ProfiraClinicRME.Components.Widget
@using ProfiraClinic.Models.Api

@inject HttpClient httpClient
@inject IAppointmentService SvcAppointment
@inject ICPPTService SvcCPPT
@inject NavigationManager Nav

<TopbarUser Route="Perawatan Pasien / CPPT"
    Title="Catatan Perkembangan Pasien Terintegrasi (CPPT)"
    ShowBack="true"
    ShowSave="true"
    Appointment="_apo"
    OnSave="@DoSave"
/>

<MudCard Class="p-4 minh-100 rounded-3 pemeriksaan-input">

    <MudCard Class="px-4 py-8" Style="max-width: 85%;">
        <MudItem xs="12" Class="p-1">
            <MudTextField @bind-Value="@_trmCPPTInForm.Subyektif" ShrinkLabel T="string" Label="Subyektif" Variant="Variant.Outlined" Lines="10" />
        </MudItem>
        <MudItem xs="12" Class="p-1">
            <MudTextField @bind-Value="@_trmCPPTInForm.Obyektif" ShrinkLabel T="string" Label="Obyektif" Variant="Variant.Outlined" Lines="10" />
        </MudItem>
        <MudItem xs="12" Class="p-1">
            <MudTextField @bind-Value="@_trmCPPTInForm.Assestment" ShrinkLabel T="string" Label="Assesmen" Variant="Variant.Outlined" Lines="10" />
        </MudItem>
        <MudItem xs="12" Class="p-1">
            <MudTextField @bind-Value="@_trmCPPTInForm.Planning" ShrinkLabel T="string" Label="Perencanaan" Variant="Variant.Outlined" Lines="10" />
        </MudItem>
        <MudItem xs="12" Class="p-1">
            <MudTextField ShrinkLabel @bind-Value="@_trmCPPTInForm.Instruksi" T="string" Label="Instruksi" Variant="Variant.Outlined" Lines="10" />
        </MudItem>
    </MudCard>
    <MudCard Class="mt-8">
        <Note EntityType="@TRMCPPT" ListData="@_listRekamMedis">
            <NoteContent>
                @{

                    string[][] displayData = [[]];
                    if(context is not null)
                    {
                        displayData = [
                            ["Kunjungan", context.NomorAppointment ?? ""],
                            ["Subyektif", context.Subyektif?? ""],
                            ["Obyektif" , context.Obyektif?? ""],
                            ["Assesment", context.Assestment ?? ""],
                            ["Perencanaan", context.Planning ?? ""],
                            ["Instruksi", context.Instruksi ?? ""],
                            ["Lokasi", context.KETLK ?? ""],
                            ["Dokter", context.NamaKaryawan ?? ""],
                            [DateUtility.FormatDate(context.UPDDT, true), ""]
                        ];
                    }
                }
                <TableGen Data="@displayData" />
            </NoteContent>
        </Note>
    </MudCard>
</MudCard>


@code {
    private bool _hidePosition;
    private bool _loading;
    private List<TRMCPPT> _listRekamMedis = [];
    private string _saveMode = "add";
    private TRMAppointment? _apo = null;
    private TRMCPPT _trmCPPTInForm = new ();

    public CPPT()
    {
        _classPath = "App::Page::CPPT";
        LogTrace.Info("init", path: _classPath);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var resApo = SvcAppointment.GetCurrent();
        if (resApo.Status != ServiceResultEnum.FOUND)
        {
            addSnackbar("Terjadi kesalahan sistem.", Severity.Error);
            return;
        }
        _apo = resApo.Data;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        //ambil rekam medis cppt
        var resDiagnosa = await SvcCPPT.GetListAsync(_apo.KodeCustomer);
        if (resDiagnosa.Status == ServiceResultEnum.FOUND)
        {
            _listRekamMedis = resDiagnosa.Data.Items;
        }
        else
        {
            addSnackbar("Gagal memuat Rekam Medis CPPT.", Severity.Error);
        }

        //cek apakah sudah ada cppt untuk appointment ini
        var resCheck = await SvcCPPT.GetByNomorAppointment(_apo.NomorAppointment);
        if (resCheck.Status == ServiceResultEnum.FOUND)
        {
            _saveMode = "edit";
            _trmCPPTInForm = resCheck.Data!;
            addSnackbar("Memuat ulang data CPPT.", Severity.Info);

        }
        _trmCPPTInForm.NomorAppointment = _apo?.NomorAppointment ?? "";
        _trmCPPTInForm.KodeKaryawan = _apo?.KodeKaryawan ?? "";
        _trmCPPTInForm.KodeCustomer = _apo?.KodeCustomer ?? "";
        _trmCPPTInForm.KodeLokasi = _apo?.KodeLokasi ?? "";
        await InvokeAsync(StateHasChanged);

    }


    private async Task DoSave()
    {
        LogTrace.Info("start", path: _classPath);
        _trmCPPTInForm.KodeLokasi = _apo?.KodeLokasi ?? "-";
        _trmCPPTInForm.TanggalTransaksi = DateTime.Now;
        //keadaan umum binded
        //tk kesadaran binded
        //sistolik distlik suhu sturasi, frek napas, frek nadi, berat badan, tgg bdn, idx tubh , lngkr kepala

        ServiceResult<NomorTransaksiDto> resSave;
        string msg = "";
        if (_saveMode == "add")
        {
            resSave = await SvcCPPT.Add(_trmCPPTInForm);
            msg = "Penyimpanan CPPT Berhasil Dilakukan";
        }
        else
        {
            resSave = await SvcCPPT.Edit(_trmCPPTInForm);
            msg = "Perubahan CPPT Berhasil Dilakukan";
        }
        LogTrace.Info("Result Save", resSave, _classPath);
        if (resSave.Status == ServiceResultEnum.SUCCESS)
        {
            addSnackbar(msg, Severity.Info);
            await Task.Delay(1000);
            Nav.NavigateTo("/perawatan/" + _apo?.IDAppointment);
        }
        else
        {
            addSnackbar("Penyimpanan CPPT gagal dilakukan", Severity.Error);

        }

    }
}

<style>
    .pemeriksaan-input .mud-input-root {
        height: 30px !important;
        padding: 0px 10px !important;
        font-size: 12px !important;
    }

    #hasil-pemeriksaan-field .mud-input-root {
        height: 150px !important;
    }

    .pemeriksaan-input .mud-input-label {
        font-size: 14px !important;
        line-height: 14px !important;
    }

    .pemeriksaan-input .mud-input-label-outlined {
        transform: translate(12px, 10px) scale(1);
    }

    .pemeriksaan-input .mud-input-label-inputcontrol {
        top: -3px;
    }
</style>
